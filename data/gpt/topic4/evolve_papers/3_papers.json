{
  "papers": [
    {
      "paperId": "pub.1169306136",
      "doi": "10.1016/j.hcc.2024.100211",
      "title": "A Survey on Large Language Model (LLM) Security and Privacy: The Good, The Bad, and The Ugly",
      "year": 2024,
      "citationCount": 465,
      "fieldCitationRatio": NaN,
      "abstract": "Large Language Models (LLMs), such as ChatGPT and Bard, have revolutionized natural language understanding and generation. They possess deep language comprehension, human-like text generation capabilities, contextual awareness, and robust problem-solving skills, making them invaluable in various domains (e.g., search engines, customer support, translation). In the meantime, LLMs have also gained traction in the security community, revealing security vulnerabilities and showcasing their potential in security-related tasks. This paper explores the intersection of LLMs with security and privacy. Specifically, we investigate how LLMs positively impact security and privacy, potential risks and threats associated with their use, and inherent vulnerabilities within LLMs. Through a comprehensive literature review, the paper categorizes the papers into “The Good” (beneficial LLM applications), “The Bad” (offensive applications), and “The Ugly” (vulnerabilities of LLMs and their defenses). We have some interesting findings. For example, LLMs have proven to enhance code security (code vulnerability detection) and data privacy (data confidentiality protection), outperforming traditional methods. However, they can also be harnessed for various attacks (particularly user-level attacks) due to their human-like reasoning abilities. We have identified areas that require further research efforts. For example, Research on model and parameter extraction attacks is limited and often theoretical, hindered by LLM parameter scale and confidentiality. Safe instruction tuning, a recent development, requires more exploration. We hope that our work can shed light on the LLMs’ potential to both bolster and jeopardize cybersecurity.",
      "reference_ids": [
        "pub.1133175312",
        "pub.1142406971",
        "pub.1095757637",
        "pub.1164026263",
        "pub.1061389762",
        "pub.1147807750",
        "pub.1155529283",
        "pub.1126709935",
        "pub.1149798105",
        "pub.1163993132",
        "pub.1048759234",
        "pub.1143948842",
        "pub.1157283058",
        "pub.1165155681",
        "pub.1160173723",
        "pub.1100135428",
        "pub.1163043631",
        "pub.1138840287",
        "pub.1160512280",
        "pub.1160819665",
        "pub.1139947167",
        "pub.1149741620",
        "pub.1163041626",
        "pub.1152622128",
        "pub.1163087861",
        "pub.1148390938",
        "pub.1113382798",
        "pub.1163042127",
        "pub.1169869210",
        "pub.1135277325",
        "pub.1165138251",
        "pub.1152553215",
        "pub.1164795780",
        "pub.1129914571",
        "pub.1170130770",
        "pub.1166482913",
        "pub.1164603869",
        "pub.1163202500",
        "pub.1165536537",
        "pub.1155704391",
        "pub.1165648326",
        "pub.1163411966",
        "pub.1163043582",
        "pub.1165377603",
        "pub.1163045500",
        "pub.1162963291",
        "pub.1129798348",
        "pub.1163397247",
        "pub.1169640352",
        "pub.1118169824",
        "pub.1166582966",
        "pub.1133175202",
        "pub.1166873603",
        "pub.1154007278",
        "pub.1160759555",
        "pub.1163043923",
        "pub.1164474214",
        "pub.1164936147",
        "pub.1140351941",
        "pub.1061258185",
        "pub.1175491234",
        "pub.1155270533",
        "pub.1166174886",
        "pub.1163044666",
        "pub.1166175802",
        "pub.1162634772",
        "pub.1164826588",
        "pub.1168777835",
        "pub.1129756771",
        "pub.1163042503",
        "pub.1159703245",
        "pub.1170136967",
        "pub.1160594985",
        "pub.1143949549",
        "pub.1158253042",
        "pub.1162697237",
        "pub.1168777820",
        "pub.1143949412",
        "pub.1146815921",
        "pub.1163414202",
        "pub.1155645662",
        "pub.1162727870",
        "pub.1169244023",
        "pub.1163226143",
        "pub.1162804688",
        "pub.1157873346",
        "pub.1160714163",
        "pub.1165344306",
        "pub.1139948377",
        "pub.1168149665",
        "pub.1155094099",
        "pub.1154454882",
        "pub.1163638651",
        "pub.1169867447",
        "pub.1163044147",
        "pub.1163533423",
        "pub.1165778591",
        "pub.1035160724",
        "pub.1163043420",
        "pub.1164614493",
        "pub.1164913027",
        "pub.1159717529",
        "pub.1157378746",
        "pub.1156362174",
        "pub.1159411550",
        "pub.1148391284",
        "pub.1165777856",
        "pub.1169869403",
        "pub.1163180815",
        "pub.1166873105",
        "pub.1163043532",
        "pub.1166473237",
        "pub.1168599093",
        "pub.1122419781",
        "pub.1156715395",
        "pub.1168842167",
        "pub.1164923217",
        "pub.1139947364",
        "pub.1155728044",
        "pub.1169428166",
        "pub.1163043802",
        "pub.1168777865",
        "pub.1148391058",
        "pub.1138783984",
        "pub.1132252232",
        "pub.1170402340",
        "pub.1093159619",
        "pub.1162764450",
        "pub.1165858071",
        "pub.1160722338",
        "pub.1011679897",
        "pub.1163530112",
        "pub.1158402518",
        "pub.1144245300",
        "pub.1166873635",
        "pub.1166874625",
        "pub.1134763034",
        "pub.1142366312",
        "pub.1139905718",
        "pub.1158369649",
        "pub.1160650244",
        "pub.1147514535",
        "pub.1155575418",
        "pub.1157188426",
        "pub.1166874258",
        "pub.1165400291",
        "pub.1142368640",
        "pub.1111114998",
        "pub.1169030983",
        "pub.1158361897",
        "pub.1120522682",
        "pub.1150867271",
        "pub.1129756829",
        "pub.1120978994",
        "pub.1166485425",
        "pub.1166167340",
        "pub.1167618204",
        "pub.1166571423",
        "pub.1148391248",
        "pub.1164941834",
        "pub.1163044933",
        "pub.1148390565",
        "pub.1165844866",
        "pub.1148390672",
        "pub.1148391189",
        "pub.1168171375",
        "pub.1164891678"
      ],
      "concepts_scores": [
        {
          "concept": "human-like reasoning abilities",
          "relevance": 0.723
        },
        {
          "concept": "natural language understanding",
          "relevance": 0.698
        },
        {
          "concept": "security-related tasks",
          "relevance": 0.695
        },
        {
          "concept": "extraction attacks",
          "relevance": 0.652
        },
        {
          "concept": "security vulnerabilities",
          "relevance": 0.651
        },
        {
          "concept": "code security",
          "relevance": 0.649
        },
        {
          "concept": "data privacy",
          "relevance": 0.647
        },
        {
          "concept": "offensive applications",
          "relevance": 0.643
        },
        {
          "concept": "language model",
          "relevance": 0.642
        },
        {
          "concept": "language understanding",
          "relevance": 0.639
        },
        {
          "concept": "privacy",
          "relevance": 0.619
        },
        {
          "concept": "contextual awareness",
          "relevance": 0.608
        },
        {
          "concept": "security community",
          "relevance": 0.603
        },
        {
          "concept": "security",
          "relevance": 0.598
        },
        {
          "concept": "traditional methods",
          "relevance": 0.549
        },
        {
          "concept": "attacks",
          "relevance": 0.537
        },
        {
          "concept": "generation capability",
          "relevance": 0.536
        },
        {
          "concept": "reasoning ability",
          "relevance": 0.51
        },
        {
          "concept": "ChatGPT",
          "relevance": 0.506
        },
        {
          "concept": "cybersecurity",
          "relevance": 0.503
        },
        {
          "concept": "research efforts",
          "relevance": 0.501
        },
        {
          "concept": "confidentiality",
          "relevance": 0.482
        },
        {
          "concept": "LLM",
          "relevance": 0.466
        },
        {
          "concept": "code",
          "relevance": 0.465
        },
        {
          "concept": "task",
          "relevance": 0.457
        },
        {
          "concept": "comprehensive literature review",
          "relevance": 0.456
        },
        {
          "concept": "parameter scaling",
          "relevance": 0.454
        },
        {
          "concept": "vulnerability",
          "relevance": 0.444
        },
        {
          "concept": "literature review",
          "relevance": 0.432
        },
        {
          "concept": "capability",
          "relevance": 0.423
        },
        {
          "concept": "language",
          "relevance": 0.42
        },
        {
          "concept": "problem-solving skills",
          "relevance": 0.418
        },
        {
          "concept": "model",
          "relevance": 0.404
        },
        {
          "concept": "domain",
          "relevance": 0.398
        },
        {
          "concept": "applications",
          "relevance": 0.396
        },
        {
          "concept": "tuning",
          "relevance": 0.395
        },
        {
          "concept": "research",
          "relevance": 0.394
        },
        {
          "concept": "method",
          "relevance": 0.369
        },
        {
          "concept": "exploration",
          "relevance": 0.368
        },
        {
          "concept": "threat",
          "relevance": 0.365
        },
        {
          "concept": "intersection",
          "relevance": 0.355
        },
        {
          "concept": "efforts",
          "relevance": 0.339
        },
        {
          "concept": "data",
          "relevance": 0.333
        },
        {
          "concept": "generation",
          "relevance": 0.327
        },
        {
          "concept": "comprehension",
          "relevance": 0.313
        },
        {
          "concept": "parameters",
          "relevance": 0.305
        },
        {
          "concept": "ability",
          "relevance": 0.304
        },
        {
          "concept": "understanding",
          "relevance": 0.295
        },
        {
          "concept": "awareness",
          "relevance": 0.295
        },
        {
          "concept": "skills",
          "relevance": 0.289
        },
        {
          "concept": "development",
          "relevance": 0.287
        },
        {
          "concept": "potential",
          "relevance": 0.273
        },
        {
          "concept": "language comprehension",
          "relevance": 0.272
        },
        {
          "concept": "Bad",
          "relevance": 0.27
        },
        {
          "concept": "community",
          "relevance": 0.27
        },
        {
          "concept": "potential risk",
          "relevance": 0.26
        },
        {
          "concept": "survey",
          "relevance": 0.251
        },
        {
          "concept": "scale",
          "relevance": 0.244
        },
        {
          "concept": "Bard",
          "relevance": 0.208
        },
        {
          "concept": "traction",
          "relevance": 0.205
        },
        {
          "concept": "review",
          "relevance": 0.199
        },
        {
          "concept": "findings",
          "relevance": 0.171
        },
        {
          "concept": "risk",
          "relevance": 0.148
        },
        {
          "concept": "paper",
          "relevance": 0.14
        }
      ]
    },
    {
      "paperId": "pub.1170136967",
      "doi": "10.1609/aaai.v38i3.27963",
      "title": "AnomalyGPT: Detecting Industrial Anomalies Using Large Vision-Language Models",
      "year": 2024,
      "citationCount": 85,
      "fieldCitationRatio": NaN,
      "abstract": "Large Vision-Language Models (LVLMs) such as MiniGPT-4 and LLaVA have demonstrated the capability of understanding images and achieved remarkable performance in various visual tasks. Despite their strong abilities in recognizing common objects due to extensive training datasets, they lack specific domain knowledge and have a weaker understanding of localized details within objects, which hinders their effectiveness in the Industrial Anomaly Detection (IAD) task. On the other hand, most existing IAD methods only provide anomaly scores and necessitate the manual setting of thresholds to distinguish between normal and abnormal samples, which restricts their practical implementation. In this paper, we explore the utilization of LVLM to address the IAD problem and propose AnomalyGPT, a novel IAD approach based on LVLM. We generate training data by simulating anomalous images and producing corresponding textual descriptions for each image. We also employ an image decoder to provide fine-grained semantic and design a prompt learner to fine-tune the LVLM using prompt embeddings. Our AnomalyGPT eliminates the need for manual threshold adjustments, thus directly assesses the presence and locations of anomalies. Additionally, AnomalyGPT supports multi-turn dialogues and exhibits impressive few-shot in-context learning capabilities. With only one normal shot, AnomalyGPT achieves the state-of-the-art performance with an accuracy of 86.1%, an image-level AUC of 94.1%, and a pixel-level AUC of 95.3% on the MVTec-AD dataset.",
      "reference_ids": [
        "pub.1150866672",
        "pub.1163452333",
        "pub.1150532714"
      ],
      "concepts_scores": [
        {
          "concept": "industrial anomaly detection",
          "relevance": 0.853
        },
        {
          "concept": "vision-language models",
          "relevance": 0.796
        },
        {
          "concept": "Vision-Language",
          "relevance": 0.736
        },
        {
          "concept": "state-of-the-art performance",
          "relevance": 0.709
        },
        {
          "concept": "manual threshold adjustment",
          "relevance": 0.689
        },
        {
          "concept": "MVTec AD dataset",
          "relevance": 0.687
        },
        {
          "concept": "multi-turn dialogue",
          "relevance": 0.685
        },
        {
          "concept": "state-of-the-art",
          "relevance": 0.683
        },
        {
          "concept": "MVTec AD",
          "relevance": 0.639
        },
        {
          "concept": "location of anomalies",
          "relevance": 0.638
        },
        {
          "concept": "anomaly detection",
          "relevance": 0.633
        },
        {
          "concept": "anomaly score",
          "relevance": 0.632
        },
        {
          "concept": "image decoding",
          "relevance": 0.631
        },
        {
          "concept": "domain knowledge",
          "relevance": 0.629
        },
        {
          "concept": "anomalous images",
          "relevance": 0.628
        },
        {
          "concept": "textual descriptions",
          "relevance": 0.625
        },
        {
          "concept": "training data",
          "relevance": 0.624
        },
        {
          "concept": "learning capability",
          "relevance": 0.616
        },
        {
          "concept": "local details",
          "relevance": 0.612
        },
        {
          "concept": "training dataset",
          "relevance": 0.61
        },
        {
          "concept": "manual setting",
          "relevance": 0.599
        },
        {
          "concept": "abnormal samples",
          "relevance": 0.591
        },
        {
          "concept": "threshold adjustment",
          "relevance": 0.573
        },
        {
          "concept": "visual tasks",
          "relevance": 0.566
        },
        {
          "concept": "normal shot",
          "relevance": 0.55
        },
        {
          "concept": "dataset",
          "relevance": 0.541
        },
        {
          "concept": "task",
          "relevance": 0.518
        },
        {
          "concept": "images",
          "relevance": 0.504
        },
        {
          "concept": "decoding",
          "relevance": 0.492
        },
        {
          "concept": "fine-grained",
          "relevance": 0.49
        },
        {
          "concept": "capability",
          "relevance": 0.48
        },
        {
          "concept": "performance",
          "relevance": 0.476
        },
        {
          "concept": "training",
          "relevance": 0.472
        },
        {
          "concept": "embedding",
          "relevance": 0.471
        },
        {
          "concept": "objective",
          "relevance": 0.437
        },
        {
          "concept": "accuracy",
          "relevance": 0.427
        },
        {
          "concept": "implementation",
          "relevance": 0.424
        },
        {
          "concept": "model",
          "relevance": 0.395
        },
        {
          "concept": "detection",
          "relevance": 0.395
        },
        {
          "concept": "details",
          "relevance": 0.389
        },
        {
          "concept": "shot",
          "relevance": 0.374
        },
        {
          "concept": "sets",
          "relevance": 0.372
        },
        {
          "concept": "learners",
          "relevance": 0.364
        },
        {
          "concept": "method",
          "relevance": 0.361
        },
        {
          "concept": "anomalies",
          "relevance": 0.359
        },
        {
          "concept": "knowledge",
          "relevance": 0.358
        },
        {
          "concept": "AUC",
          "relevance": 0.355
        },
        {
          "concept": "utilization",
          "relevance": 0.338
        },
        {
          "concept": "description",
          "relevance": 0.338
        },
        {
          "concept": "threshold",
          "relevance": 0.332
        },
        {
          "concept": "location",
          "relevance": 0.331
        },
        {
          "concept": "data",
          "relevance": 0.326
        },
        {
          "concept": "industry",
          "relevance": 0.323
        },
        {
          "concept": "ability",
          "relevance": 0.298
        },
        {
          "concept": "dialogue",
          "relevance": 0.287
        },
        {
          "concept": "scores",
          "relevance": 0.221
        },
        {
          "concept": "adjustment",
          "relevance": 0.214
        },
        {
          "concept": "effect",
          "relevance": 0.205
        },
        {
          "concept": "problem",
          "relevance": 0.203
        },
        {
          "concept": "samples",
          "relevance": 0.195
        },
        {
          "concept": "approach",
          "relevance": 0.18
        },
        {
          "concept": "presence",
          "relevance": 0.158
        }
      ]
    },
    {
      "paperId": "pub.1150866672",
      "doi": "10.1609/aaai.v35i4.16420",
      "title": "Learning Semantic Context from Normal Samples for Unsupervised Anomaly Detection",
      "year": 2021,
      "citationCount": 141,
      "fieldCitationRatio": 43.94,
      "abstract": "Unsupervised anomaly detection aims to identify data samples that have low probability density from a set of input samples, and only the normal samples are provided for model training. The inference of abnormal regions on the input image requires an understanding of the surrounding semantic context. This work presents a Semantic Context based Anomaly Detection Network, SCADN, for unsupervised anomaly detection by learning the semantic context from the normal samples. To achieve this, we first generate multi-scale striped masks to remove a part of regions from the normal samples, and then train a generative adversarial network to reconstruct the unseen regions. Note that the masks are designed in multiple scales and stripe directions, and various training examples are generated to obtain the rich semantic context . In testing, we obtain an error map by computing the difference between the reconstructed image and the input image for all samples, and infer the abnormal samples based on the error maps. Finally, we perform various experiments on three public benchmark datasets and a new dataset LaceAD collected by us, and show that our method clearly outperforms the current state-of-the-art methods.",
      "reference_ids": [
        "pub.1046915289",
        "pub.1023309467"
      ],
      "concepts_scores": [
        {
          "concept": "unsupervised anomaly detection",
          "relevance": 0.841
        },
        {
          "concept": "anomaly detection",
          "relevance": 0.774
        },
        {
          "concept": "input image",
          "relevance": 0.74
        },
        {
          "concept": "semantic context",
          "relevance": 0.736
        },
        {
          "concept": "state-of-the-art methods",
          "relevance": 0.709
        },
        {
          "concept": "public benchmark datasets",
          "relevance": 0.689
        },
        {
          "concept": "anomaly detection network",
          "relevance": 0.687
        },
        {
          "concept": "state-of-the-art",
          "relevance": 0.686
        },
        {
          "concept": "training examples",
          "relevance": 0.638
        },
        {
          "concept": "benchmark datasets",
          "relevance": 0.637
        },
        {
          "concept": "error map",
          "relevance": 0.635
        },
        {
          "concept": "adversarial network",
          "relevance": 0.634
        },
        {
          "concept": "detection network",
          "relevance": 0.624
        },
        {
          "concept": "input samples",
          "relevance": 0.623
        },
        {
          "concept": "model training",
          "relevance": 0.62
        },
        {
          "concept": "low probability density",
          "relevance": 0.607
        },
        {
          "concept": "reconstructed images",
          "relevance": 0.594
        },
        {
          "concept": "abnormal samples",
          "relevance": 0.594
        },
        {
          "concept": "data samples",
          "relevance": 0.576
        },
        {
          "concept": "abnormal regions",
          "relevance": 0.557
        },
        {
          "concept": "dataset",
          "relevance": 0.543
        },
        {
          "concept": "network",
          "relevance": 0.536
        },
        {
          "concept": "input",
          "relevance": 0.509
        },
        {
          "concept": "images",
          "relevance": 0.498
        },
        {
          "concept": "multiple scales",
          "relevance": 0.489
        },
        {
          "concept": "Unsupervised",
          "relevance": 0.485
        },
        {
          "concept": "detection",
          "relevance": 0.483
        },
        {
          "concept": "probability density",
          "relevance": 0.482
        },
        {
          "concept": "error",
          "relevance": 0.476
        },
        {
          "concept": "training",
          "relevance": 0.474
        },
        {
          "concept": "maps",
          "relevance": 0.462
        },
        {
          "concept": "mask",
          "relevance": 0.461
        },
        {
          "concept": "data",
          "relevance": 0.449
        },
        {
          "concept": "inference",
          "relevance": 0.428
        },
        {
          "concept": "context",
          "relevance": 0.422
        },
        {
          "concept": "method",
          "relevance": 0.421
        },
        {
          "concept": "normal samples",
          "relevance": 0.417
        },
        {
          "concept": "stripe mask",
          "relevance": 0.384
        },
        {
          "concept": "examples",
          "relevance": 0.382
        },
        {
          "concept": "experiments",
          "relevance": 0.344
        },
        {
          "concept": "model",
          "relevance": 0.343
        },
        {
          "concept": "direction",
          "relevance": 0.306
        },
        {
          "concept": "stripe direction",
          "relevance": 0.302
        },
        {
          "concept": "stripes",
          "relevance": 0.267
        },
        {
          "concept": "test",
          "relevance": 0.257
        },
        {
          "concept": "samples",
          "relevance": 0.245
        },
        {
          "concept": "region",
          "relevance": 0.244
        },
        {
          "concept": "scale",
          "relevance": 0.239
        },
        {
          "concept": "density",
          "relevance": 0.213
        }
      ]
    },
    {
      "paperId": "pub.1023309467",
      "doi": "10.1023/b:mach.0000008084.60811.49",
      "title": "Support Vector Data Description",
      "year": 2004,
      "citationCount": 2805,
      "fieldCitationRatio": 518.05,
      "abstract": "Data domain description concerns the characterization of a data set. A good description covers all target data but includes no superfluous space. The boundary of a dataset can be used to detect novel data or outliers. We will present the Support Vector Data Description (SVDD) which is inspired by the Support Vector Classifier. It obtains a spherically shaped boundary around a dataset and analogous to the Support Vector Classifier it can be made flexible by using other kernel functions. The method is made robust against outliers in the training set and is capable of tightening the description by using negative examples. We show characteristics of the Support Vector Data Descriptions using artificial and real data.",
      "reference_ids": [
        "pub.1057891654",
        "pub.1044522995",
        "pub.1056860343",
        "pub.1035405952",
        "pub.1048297948",
        "pub.1014860265",
        "pub.1061531591",
        "pub.1098665985",
        "pub.1042064636",
        "pub.1021275024",
        "pub.1038617092",
        "pub.1098685842",
        "pub.1051037139",
        "pub.1006271376",
        "pub.1094808156",
        "pub.1004237062",
        "pub.1037280379",
        "pub.1165598000"
      ],
      "concepts_scores": [
        {
          "concept": "Support Vector Data Description",
          "relevance": 0.834
        },
        {
          "concept": "support vector classifier",
          "relevance": 0.769
        },
        {
          "concept": "vector classifier",
          "relevance": 0.714
        },
        {
          "concept": "data description",
          "relevance": 0.689
        },
        {
          "concept": "detect novel data",
          "relevance": 0.681
        },
        {
          "concept": "data domain description",
          "relevance": 0.671
        },
        {
          "concept": "negative examples",
          "relevance": 0.615
        },
        {
          "concept": "domain description",
          "relevance": 0.611
        },
        {
          "concept": "target data",
          "relevance": 0.61
        },
        {
          "concept": "training set",
          "relevance": 0.597
        },
        {
          "concept": "kernel function",
          "relevance": 0.594
        },
        {
          "concept": "classifier",
          "relevance": 0.561
        },
        {
          "concept": "dataset",
          "relevance": 0.535
        },
        {
          "concept": "outliers",
          "relevance": 0.515
        },
        {
          "concept": "kernel",
          "relevance": 0.443
        },
        {
          "concept": "data",
          "relevance": 0.442
        },
        {
          "concept": "support",
          "relevance": 0.432
        },
        {
          "concept": "description",
          "relevance": 0.417
        },
        {
          "concept": "training",
          "relevance": 0.403
        },
        {
          "concept": "data",
          "relevance": 0.399
        },
        {
          "concept": "examples",
          "relevance": 0.375
        },
        {
          "concept": "sets",
          "relevance": 0.368
        },
        {
          "concept": "space",
          "relevance": 0.359
        },
        {
          "concept": "method",
          "relevance": 0.357
        },
        {
          "concept": "novel data",
          "relevance": 0.301
        },
        {
          "concept": "target",
          "relevance": 0.297
        },
        {
          "concept": "function",
          "relevance": 0.296
        },
        {
          "concept": "boundaries",
          "relevance": 0.278
        },
        {
          "concept": "characteristics",
          "relevance": 0.259
        },
        {
          "concept": "characterization",
          "relevance": 0.191
        }
      ]
    },
    {
      "paperId": "pub.1163452333",
      "doi": "10.1109/cvpr52729.2023.00382",
      "title": "OmniAL: A Unified CNN Framework for Unsupervised Anomaly Localization",
      "year": 2023,
      "citationCount": 63,
      "fieldCitationRatio": 37.43,
      "abstract": "Unsupervised anomaly localization and detection is crucial for industrial manufacturing processes due to the lack of anomalous samples. Recent unsupervised advances on industrial anomaly detection achieve high performance by training separate models for many different categories. The model storage and training time cost of this paradigm is high. Moreover, the setting of one-model-N-classes leads to fearful degradation of existing methods. In this paper, we propose a unified CNN framework for unsupervised anomaly localization, named OmniAL. This method conquers aforementioned problems by improving anomaly synthesis, reconstruction and localization. To prevent the model learning identical reconstruction, it trains the model with proposed panel-guided synthetic anomaly data rather than directly using normal data. It increases anomaly reconstruction error for multi-class distribution by using a network that is equipped with proposed Dilated Channel and Spatial Attention (DCSA) blocks. To better localize the anomaly regions, it employs proposed DiffNeck between reconstruction and localization sub-networks to explore multi-level differences. Experiments on 15-class MVTecAD and 12-class VisA datasets verify the advantage of proposed OmniAL that surpasses the state-of-the-art of unified models. On 15-class-MVTecAD/12-class-VisA, its single unified model achieves 97.2/87.8 image-AUROC, 98.3/96.6 pixel-AUROC and 73.4/41.7 pixel-AP for anomaly detection and localization respectively. Besides that, we make the first attempt to conduct a comprehensive study on the robustness of unsupervised anomaly localization and detection methods against different level adversarial attacks. Experiential results show OmniAL has good application prospects for its superior performance.",
      "reference_ids": [
        "pub.1061698164",
        "pub.1150000408",
        "pub.1138871310",
        "pub.1100060309",
        "pub.1142368008",
        "pub.1152509714",
        "pub.1142368588",
        "pub.1145639410",
        "pub.1135998226",
        "pub.1129912920",
        "pub.1145639411",
        "pub.1142372405",
        "pub.1152130166",
        "pub.1118778391",
        "pub.1138871320",
        "pub.1137352714",
        "pub.1061640964",
        "pub.1125161350",
        "pub.1107454571",
        "pub.1145639534",
        "pub.1145901815",
        "pub.1151380999",
        "pub.1095570982",
        "pub.1152409379",
        "pub.1121715269",
        "pub.1119170462",
        "pub.1061579579",
        "pub.1151380331",
        "pub.1135742981",
        "pub.1150532714",
        "pub.1131841367"
      ],
      "concepts_scores": [
        {
          "concept": "anomaly localization",
          "relevance": 0.769
        },
        {
          "concept": "anomaly detection",
          "relevance": 0.719
        },
        {
          "concept": "CNN framework",
          "relevance": 0.718
        },
        {
          "concept": "industrial anomaly detection",
          "relevance": 0.676
        },
        {
          "concept": "multi-class distributions",
          "relevance": 0.676
        },
        {
          "concept": "training time cost",
          "relevance": 0.669
        },
        {
          "concept": "local sub-networks",
          "relevance": 0.666
        },
        {
          "concept": "train separate models",
          "relevance": 0.656
        },
        {
          "concept": "adversarial attacks",
          "relevance": 0.625
        },
        {
          "concept": "reconstruction error",
          "relevance": 0.61
        },
        {
          "concept": "model storage",
          "relevance": 0.601
        },
        {
          "concept": "experiential results",
          "relevance": 0.587
        },
        {
          "concept": "anomalous samples",
          "relevance": 0.584
        },
        {
          "concept": "sub-networks",
          "relevance": 0.583
        },
        {
          "concept": "time cost",
          "relevance": 0.575
        },
        {
          "concept": "superior performance",
          "relevance": 0.572
        },
        {
          "concept": "detection method",
          "relevance": 0.566
        },
        {
          "concept": "normal data",
          "relevance": 0.548
        },
        {
          "concept": "CNN",
          "relevance": 0.483
        },
        {
          "concept": "detection",
          "relevance": 0.48
        },
        {
          "concept": "industrial manufacturing processes",
          "relevance": 0.475
        },
        {
          "concept": "Unsupervised",
          "relevance": 0.474
        },
        {
          "concept": "anomaly data",
          "relevance": 0.474
        },
        {
          "concept": "framework",
          "relevance": 0.468
        },
        {
          "concept": "performance",
          "relevance": 0.467
        },
        {
          "concept": "dataset",
          "relevance": 0.458
        },
        {
          "concept": "network",
          "relevance": 0.452
        },
        {
          "concept": "unified model",
          "relevance": 0.448
        },
        {
          "concept": "attacks",
          "relevance": 0.445
        },
        {
          "concept": "manufacturing process",
          "relevance": 0.444
        },
        {
          "concept": "reconstruction",
          "relevance": 0.439
        },
        {
          "concept": "robustness",
          "relevance": 0.435
        },
        {
          "concept": "method",
          "relevance": 0.431
        },
        {
          "concept": "Unified",
          "relevance": 0.428
        },
        {
          "concept": "localization",
          "relevance": 0.421
        },
        {
          "concept": "model",
          "relevance": 0.418
        },
        {
          "concept": "separate models",
          "relevance": 0.413
        },
        {
          "concept": "error",
          "relevance": 0.401
        },
        {
          "concept": "training",
          "relevance": 0.4
        },
        {
          "concept": "channel",
          "relevance": 0.4
        },
        {
          "concept": "paradigm",
          "relevance": 0.399
        },
        {
          "concept": "data",
          "relevance": 0.37
        },
        {
          "concept": "anomaly region",
          "relevance": 0.367
        },
        {
          "concept": "cost",
          "relevance": 0.366
        },
        {
          "concept": "DCSA",
          "relevance": 0.362
        },
        {
          "concept": "comprehensive study",
          "relevance": 0.357
        },
        {
          "concept": "storage",
          "relevance": 0.348
        },
        {
          "concept": "experiments",
          "relevance": 0.336
        },
        {
          "concept": "anomalies",
          "relevance": 0.335
        },
        {
          "concept": "advances",
          "relevance": 0.329
        },
        {
          "concept": "process",
          "relevance": 0.317
        },
        {
          "concept": "categories",
          "relevance": 0.31
        },
        {
          "concept": "results",
          "relevance": 0.308
        },
        {
          "concept": "degradation",
          "relevance": 0.288
        },
        {
          "concept": "lack",
          "relevance": 0.269
        },
        {
          "concept": "visa",
          "relevance": 0.257
        },
        {
          "concept": "distribution",
          "relevance": 0.256
        },
        {
          "concept": "problem",
          "relevance": 0.255
        },
        {
          "concept": "synthesis",
          "relevance": 0.226
        },
        {
          "concept": "levels",
          "relevance": 0.204
        },
        {
          "concept": "samples",
          "relevance": 0.203
        },
        {
          "concept": "region",
          "relevance": 0.198
        },
        {
          "concept": "study",
          "relevance": 0.183
        },
        {
          "concept": "dilated channels",
          "relevance": 0.155
        },
        {
          "concept": "dilatation",
          "relevance": 0.154
        },
        {
          "concept": "differences",
          "relevance": 0.14
        }
      ]
    },
    {
      "paperId": "pub.1142372405",
      "doi": "10.1109/cvpr46437.2021.01549",
      "title": "Exploring Simple Siamese Representation Learning",
      "year": 2021,
      "citationCount": 3017,
      "fieldCitationRatio": 940.24,
      "abstract": "Siamese networks have become a common structure in various recent models for unsupervised visual representation learning. These models maximize the similarity between two augmentations of one image, subject to certain conditions for avoiding collapsing solutions. In this paper, we report surprising empirical results that simple Siamese networks can learn meaningful representations even using none of the following: (i) negative sample pairs, (ii) large batches, (iii) momentum encoders. Our experiments show that collapsing solutions do exist for the loss and structure, but a stop-gradient operation plays an essential role in preventing collapsing. We provide a hypothesis on the implication of stop-gradient, and further show proof-of-concept experiments verifying it. Our \"SimSiam\" method achieves competitive results on ImageNet and downstream tasks. We hope this simple baseline will motivate people to rethink the roles of Siamese architectures for unsupervised representation learning. Code is made available.1",
      "reference_ids": [
        "pub.1132944314",
        "pub.1095689025",
        "pub.1110720527",
        "pub.1125158595",
        "pub.1061745117",
        "pub.1123988115",
        "pub.1052782426",
        "pub.1093767478",
        "pub.1107502756",
        "pub.1129913169",
        "pub.1045321436",
        "pub.1014796149",
        "pub.1088751839",
        "pub.1129913470",
        "pub.1043811270",
        "pub.1093359587"
      ],
      "concepts_scores": [
        {
          "concept": "representation learning",
          "relevance": 0.743
        },
        {
          "concept": "Siamese network",
          "relevance": 0.707
        },
        {
          "concept": "unsupervised visual representation learning",
          "relevance": 0.679
        },
        {
          "concept": "stop-gradient operation",
          "relevance": 0.661
        },
        {
          "concept": "visual representation learning",
          "relevance": 0.66
        },
        {
          "concept": "negative sample pairs",
          "relevance": 0.66
        },
        {
          "concept": "unsupervised representation learning",
          "relevance": 0.659
        },
        {
          "concept": "Siamese architecture",
          "relevance": 0.611
        },
        {
          "concept": "downstream tasks",
          "relevance": 0.609
        },
        {
          "concept": "momentum encoder",
          "relevance": 0.604
        },
        {
          "concept": "competitive results",
          "relevance": 0.6
        },
        {
          "concept": "sample pairs",
          "relevance": 0.522
        },
        {
          "concept": "learning",
          "relevance": 0.514
        },
        {
          "concept": "network",
          "relevance": 0.512
        },
        {
          "concept": "ImageNet",
          "relevance": 0.479
        },
        {
          "concept": "empirical results",
          "relevance": 0.477
        },
        {
          "concept": "encoding",
          "relevance": 0.457
        },
        {
          "concept": "architecture",
          "relevance": 0.445
        },
        {
          "concept": "code",
          "relevance": 0.436
        },
        {
          "concept": "task",
          "relevance": 0.429
        },
        {
          "concept": "representation",
          "relevance": 0.419
        },
        {
          "concept": "collapse solutions",
          "relevance": 0.414
        },
        {
          "concept": "images",
          "relevance": 0.391
        },
        {
          "concept": "solution",
          "relevance": 0.391
        },
        {
          "concept": "experiments",
          "relevance": 0.381
        },
        {
          "concept": "model",
          "relevance": 0.379
        },
        {
          "concept": "operation",
          "relevance": 0.36
        },
        {
          "concept": "similarity",
          "relevance": 0.358
        },
        {
          "concept": "augmentation",
          "relevance": 0.354
        },
        {
          "concept": "results",
          "relevance": 0.349
        },
        {
          "concept": "pairs",
          "relevance": 0.305
        },
        {
          "concept": "people",
          "relevance": 0.292
        },
        {
          "concept": "structure",
          "relevance": 0.291
        },
        {
          "concept": "momentum",
          "relevance": 0.275
        },
        {
          "concept": "batch",
          "relevance": 0.274
        },
        {
          "concept": "collapse",
          "relevance": 0.25
        },
        {
          "concept": "baseline",
          "relevance": 0.243
        },
        {
          "concept": "loss",
          "relevance": 0.227
        },
        {
          "concept": "prevent collapse",
          "relevance": 0.225
        },
        {
          "concept": "implications",
          "relevance": 0.22
        },
        {
          "concept": "conditions",
          "relevance": 0.199
        },
        {
          "concept": "hypothesis",
          "relevance": 0.194
        }
      ]
    },
    {
      "paperId": "pub.1135998226",
      "doi": "10.1007/978-3-030-68799-1_35",
      "title": "PaDiM: A Patch Distribution Modeling Framework for Anomaly Detection and Localization",
      "year": 2021,
      "citationCount": 919,
      "fieldCitationRatio": 274.37,
      "abstract": "We present a new framework for Patch Distribution Modeling, PaDiM, to concurrently detect and localize anomalies in images in a one-class learning setting. PaDiM makes use of a pretrained convolutional neural network (CNN) for patch embedding, and of multivariate Gaussian distributions to get a probabilistic representation of the normal class. It also exploits correlations between the different semantic levels of CNN to better localize anomalies. PaDiM outperforms current state-of-the-art approaches for both anomaly detection and localization on the MVTec AD and STC datasets. To match real-world visual industrial inspection, we extend the evaluation protocol to assess performance of anomaly localization algorithms on non-aligned dataset. The state-of-the-art performance and low complexity of PaDiM make it a good candidate for many industrial applications.",
      "reference_ids": [
        "pub.1110720818",
        "pub.1123988460",
        "pub.1129912920",
        "pub.1121397862",
        "pub.1100417656",
        "pub.1095689025",
        "pub.1135742981",
        "pub.1096897141",
        "pub.1061646286",
        "pub.1123987779",
        "pub.1115959192",
        "pub.1093359587",
        "pub.1137773775",
        "pub.1129913362",
        "pub.1121395708",
        "pub.1110720490",
        "pub.1125164360",
        "pub.1050450827",
        "pub.1112827477",
        "pub.1123987535",
        "pub.1132741099"
      ],
      "concepts_scores": [
        {
          "concept": "convolutional neural network",
          "relevance": 0.835
        },
        {
          "concept": "anomaly detection",
          "relevance": 0.742
        },
        {
          "concept": "state-of-the-art performance",
          "relevance": 0.717
        },
        {
          "concept": "one-class learning setting",
          "relevance": 0.716
        },
        {
          "concept": "state-of-the-art approaches",
          "relevance": 0.713
        },
        {
          "concept": "levels of convolutional neural networks",
          "relevance": 0.71
        },
        {
          "concept": "state-of-the-art",
          "relevance": 0.691
        },
        {
          "concept": "multivariate Gaussian distribution",
          "relevance": 0.658
        },
        {
          "concept": "MVTec AD",
          "relevance": 0.647
        },
        {
          "concept": "patch embedding",
          "relevance": 0.643
        },
        {
          "concept": "localization algorithm",
          "relevance": 0.636
        },
        {
          "concept": "low complexity",
          "relevance": 0.634
        },
        {
          "concept": "neural network",
          "relevance": 0.626
        },
        {
          "concept": "semantic level",
          "relevance": 0.615
        },
        {
          "concept": "normal class",
          "relevance": 0.607
        },
        {
          "concept": "local anomalies",
          "relevance": 0.6
        },
        {
          "concept": "learning settings",
          "relevance": 0.583
        },
        {
          "concept": "probabilistic representation",
          "relevance": 0.579
        },
        {
          "concept": "evaluation protocol",
          "relevance": 0.565
        },
        {
          "concept": "Gaussian distribution",
          "relevance": 0.552
        },
        {
          "concept": "dataset",
          "relevance": 0.547
        },
        {
          "concept": "MVTec",
          "relevance": 0.508
        },
        {
          "concept": "framework",
          "relevance": 0.483
        },
        {
          "concept": "modeling framework",
          "relevance": 0.48
        },
        {
          "concept": "embedding",
          "relevance": 0.476
        },
        {
          "concept": "algorithm",
          "relevance": 0.475
        },
        {
          "concept": "network",
          "relevance": 0.466
        },
        {
          "concept": "detection",
          "relevance": 0.463
        },
        {
          "concept": "assess performance",
          "relevance": 0.459
        },
        {
          "concept": "representation",
          "relevance": 0.442
        },
        {
          "concept": "padimate",
          "relevance": 0.434
        },
        {
          "concept": "distribution model",
          "relevance": 0.426
        },
        {
          "concept": "patches",
          "relevance": 0.418
        },
        {
          "concept": "performance",
          "relevance": 0.416
        },
        {
          "concept": "images",
          "relevance": 0.412
        },
        {
          "concept": "industrial applications",
          "relevance": 0.408
        },
        {
          "concept": "protocol",
          "relevance": 0.407
        },
        {
          "concept": "localization",
          "relevance": 0.403
        },
        {
          "concept": "applications",
          "relevance": 0.392
        },
        {
          "concept": "STC",
          "relevance": 0.382
        },
        {
          "concept": "sets",
          "relevance": 0.377
        },
        {
          "concept": "anomalies",
          "relevance": 0.37
        },
        {
          "concept": "evaluation",
          "relevance": 0.366
        },
        {
          "concept": "class",
          "relevance": 0.353
        },
        {
          "concept": "model",
          "relevance": 0.346
        },
        {
          "concept": "distribution modelling framework",
          "relevance": 0.28
        },
        {
          "concept": "distribution",
          "relevance": 0.265
        },
        {
          "concept": "correlation",
          "relevance": 0.219
        },
        {
          "concept": "approach",
          "relevance": 0.155
        }
      ]
    },
    {
      "paperId": "pub.1170402340",
      "doi": "10.1109/apsec60848.2023.00085",
      "title": "ChatGPT for Vulnerability Detection, Classification, and Repair: How Far Are We?",
      "year": 2023,
      "citationCount": 53,
      "fieldCitationRatio": 45.25,
      "abstract": "Large language models (LLMs) like ChatGPT (i.e., gpt-3.5-turbo and gpt-4) exhibited remarkable advancement in a range of software engineering tasks associated with source code such as code review and code generation. In this paper, we undertake a comprehensive study by instructing ChatGPT for four prevalent vulnerability tasks: function and line-level vulnerability prediction, vulnerability classification, severity estimation, and vulnerability repair. We compare ChatGPT with state-of-the-art language models designed for software vulnerability purposes. Through an empirical assessment employing extensive real-world datasets featuring over 190,000 C/C++ functions, we found that ChatGPT achieves limited performance, trailing behind other language models in vulnerability contexts by a significant margin. The experimental outcomes highlight the challenging nature of vulnerability prediction tasks, requiring domain-specific expertise. Despite ChatGPT's substantial model scale, exceeding that of source code-pre-trained language models (e.g., CodeBERT) by a factor of 14,000, the process of fine-tuning remains imperative for ChatGPT to generalize for vulnerability prediction tasks. We publish the studied dataset, experimental prompts for ChatGPT, and experimental results at https://github.com/awsm-research/ChatGPT4Vul.",
      "reference_ids": [
        "pub.1162804688",
        "pub.1163325078",
        "pub.1145170274",
        "pub.1160766715",
        "pub.1130964448",
        "pub.1162964065",
        "pub.1152622073",
        "pub.1140503459",
        "pub.1148900535",
        "pub.1133175050",
        "pub.1166174469",
        "pub.1162634800"
      ],
      "concepts_scores": [
        {
          "concept": "language model",
          "relevance": 0.754
        },
        {
          "concept": "prediction task",
          "relevance": 0.698
        },
        {
          "concept": "state-of-the-art language models",
          "relevance": 0.689
        },
        {
          "concept": "real-world datasets",
          "relevance": 0.664
        },
        {
          "concept": "vulnerability repair",
          "relevance": 0.619
        },
        {
          "concept": "vulnerability detection",
          "relevance": 0.618
        },
        {
          "concept": "code review",
          "relevance": 0.615
        },
        {
          "concept": "C/C++ functions",
          "relevance": 0.612
        },
        {
          "concept": "code generation",
          "relevance": 0.609
        },
        {
          "concept": "source code",
          "relevance": 0.606
        },
        {
          "concept": "vulnerable tasks",
          "relevance": 0.603
        },
        {
          "concept": "ChatGPT",
          "relevance": 0.599
        },
        {
          "concept": "vulnerability prediction",
          "relevance": 0.594
        },
        {
          "concept": "domain-specific expertise",
          "relevance": 0.589
        },
        {
          "concept": "experimental results",
          "relevance": 0.544
        },
        {
          "concept": "code",
          "relevance": 0.536
        },
        {
          "concept": "vulnerability classification",
          "relevance": 0.528
        },
        {
          "concept": "task",
          "relevance": 0.527
        },
        {
          "concept": "dataset",
          "relevance": 0.524
        },
        {
          "concept": "software",
          "relevance": 0.512
        },
        {
          "concept": "experimental outcomes",
          "relevance": 0.508
        },
        {
          "concept": "classification",
          "relevance": 0.498
        },
        {
          "concept": "language",
          "relevance": 0.484
        },
        {
          "concept": "C/C++",
          "relevance": 0.476
        },
        {
          "concept": "severity estimation",
          "relevance": 0.457
        },
        {
          "concept": "vulnerability",
          "relevance": 0.454
        },
        {
          "concept": "model",
          "relevance": 0.409
        },
        {
          "concept": "model scale",
          "relevance": 0.407
        },
        {
          "concept": "empirical assessment",
          "relevance": 0.401
        },
        {
          "concept": "performance",
          "relevance": 0.398
        },
        {
          "concept": "detection",
          "relevance": 0.383
        },
        {
          "concept": "LLM",
          "relevance": 0.353
        },
        {
          "concept": "comprehensive study",
          "relevance": 0.353
        },
        {
          "concept": "expertise",
          "relevance": 0.349
        },
        {
          "concept": "prediction",
          "relevance": 0.341
        },
        {
          "concept": "estimation",
          "relevance": 0.34
        },
        {
          "concept": "function",
          "relevance": 0.336
        },
        {
          "concept": "context",
          "relevance": 0.328
        },
        {
          "concept": "purposes",
          "relevance": 0.316
        },
        {
          "concept": "process",
          "relevance": 0.314
        },
        {
          "concept": "generation",
          "relevance": 0.31
        },
        {
          "concept": "results",
          "relevance": 0.305
        },
        {
          "concept": "prompts",
          "relevance": 0.297
        },
        {
          "concept": "source",
          "relevance": 0.284
        },
        {
          "concept": "experimental prompt",
          "relevance": 0.282
        },
        {
          "concept": "vulnerability context",
          "relevance": 0.237
        },
        {
          "concept": "scale",
          "relevance": 0.231
        },
        {
          "concept": "Far",
          "relevance": 0.218
        },
        {
          "concept": "assessment",
          "relevance": 0.217
        },
        {
          "concept": "margin",
          "relevance": 0.216
        },
        {
          "concept": "severity",
          "relevance": 0.192
        },
        {
          "concept": "review",
          "relevance": 0.189
        },
        {
          "concept": "factors",
          "relevance": 0.186
        },
        {
          "concept": "study",
          "relevance": 0.181
        },
        {
          "concept": "outcomes",
          "relevance": 0.167
        },
        {
          "concept": "repair",
          "relevance": 0.138
        }
      ]
    },
    {
      "paperId": "pub.1130964448",
      "doi": "10.1145/3379597.3387501",
      "title": "A C/C++ Code Vulnerability Dataset with Code Changes and CVE Summaries",
      "year": 2020,
      "citationCount": 309,
      "fieldCitationRatio": 76.07,
      "abstract": "We collected a large C/C++ code vulnerability dataset from open-source Github projects, namely Big-Vul. We crawled the public Common Vulnerabilities and Exposures (CVE) database and CVE-related source code repositories. Specifically, we collected the descriptive information of the vulnerabilities from the CVE database, e.g., CVE IDs, CVE severity scores, and CVE summaries. With the CVE information and its related published Github code repository links, we downloaded all of the code repositories and extracted vulnerability related code changes. In total, Big-Vul contains 3,754 code vulnerabilities spanning 91 different vulnerability types. All these code vulnerabilities are extracted from 348 Github projects. All information is stored in the CSV format. We linked the code changes with the CVE descriptive information. Thus, our Big-Vul can be used for various research topics, e.g., detecting and fixing vulnerabilities, analyzing the vulnerability related code changes. Big-Vul is publicly available on Github.",
      "reference_ids": [
        "pub.1120704377",
        "pub.1109824400",
        "pub.1105797335",
        "pub.1095456003",
        "pub.1111520462",
        "pub.1091288730",
        "pub.1109826076"
      ],
      "concepts_scores": [
        {
          "concept": "code changes",
          "relevance": 0.736
        },
        {
          "concept": "code vulnerabilities",
          "relevance": 0.713
        },
        {
          "concept": "code repositories",
          "relevance": 0.706
        },
        {
          "concept": "vulnerability datasets",
          "relevance": 0.703
        },
        {
          "concept": "source code repositories",
          "relevance": 0.66
        },
        {
          "concept": "CVE database",
          "relevance": 0.616
        },
        {
          "concept": "CVE IDs",
          "relevance": 0.614
        },
        {
          "concept": "Common Vulnerabilities",
          "relevance": 0.613
        },
        {
          "concept": "fixing vulnerabilities",
          "relevance": 0.613
        },
        {
          "concept": "GitHub projects",
          "relevance": 0.611
        },
        {
          "concept": "repository link",
          "relevance": 0.61
        },
        {
          "concept": "CVE information",
          "relevance": 0.592
        },
        {
          "concept": "vulnerability types",
          "relevance": 0.585
        },
        {
          "concept": "CSV format",
          "relevance": 0.579
        },
        {
          "concept": "CVE",
          "relevance": 0.558
        },
        {
          "concept": "research topic",
          "relevance": 0.558
        },
        {
          "concept": "C/C++",
          "relevance": 0.549
        },
        {
          "concept": "code",
          "relevance": 0.546
        },
        {
          "concept": "GitHub",
          "relevance": 0.529
        },
        {
          "concept": "Descriptive information",
          "relevance": 0.525
        },
        {
          "concept": "repository",
          "relevance": 0.523
        },
        {
          "concept": "dataset",
          "relevance": 0.521
        },
        {
          "concept": "information",
          "relevance": 0.493
        },
        {
          "concept": "vulnerability",
          "relevance": 0.452
        },
        {
          "concept": "database",
          "relevance": 0.446
        },
        {
          "concept": "CSV",
          "relevance": 0.439
        },
        {
          "concept": "ID",
          "relevance": 0.428
        },
        {
          "concept": "links",
          "relevance": 0.404
        },
        {
          "concept": "topics",
          "relevance": 0.382
        },
        {
          "concept": "project",
          "relevance": 0.341
        },
        {
          "concept": "research",
          "relevance": 0.321
        },
        {
          "concept": "summary",
          "relevance": 0.304
        },
        {
          "concept": "severity score",
          "relevance": 0.244
        },
        {
          "concept": "scores",
          "relevance": 0.228
        },
        {
          "concept": "changes",
          "relevance": 0.215
        },
        {
          "concept": "type",
          "relevance": 0.207
        },
        {
          "concept": "formation",
          "relevance": 0.199
        },
        {
          "concept": "exposure",
          "relevance": 0.192
        }
      ]
    },
    {
      "paperId": "pub.1095456003",
      "doi": "10.1109/sp.2014.44",
      "title": "Modeling and Discovering Vulnerabilities with Code Property Graphs",
      "year": 2014,
      "citationCount": 632,
      "fieldCitationRatio": 154.71,
      "abstract": "The vast majority of security breaches encountered today are a direct result of insecure code. Consequently, the protection of computer systems critically depends on the rigorous identification of vulnerabilities in software, a tedious and error-prone process requiring significant expertise. Unfortunately, a single flaw suffices to undermine the security of a system and thus the sheer amount of code to audit plays into the attacker's cards. In this paper, we present a method to effectively mine large amounts of source code for vulnerabilities. To this end, we introduce a novel representation of source code called a code property graph that merges concepts of classic program analysis, namely abstract syntax trees, control flow graphs and program dependence graphs, into a joint data structure. This comprehensive representation enables us to elegantly model templates for common vulnerabilities with graph traversals that, for instance, can identify buffer overflows, integer overflows, format string vulnerabilities, or memory disclosures. We implement our approach using a popular graph database and demonstrate its efficacy by identifying 18 previously unknown vulnerabilities in the source code of the Linux kernel.",
      "reference_ids": [
        "pub.1033786842",
        "pub.1093286182",
        "pub.1023902362",
        "pub.1031215765",
        "pub.1094430923",
        "pub.1046223867",
        "pub.1037009686",
        "pub.1061420438",
        "pub.1061787688",
        "pub.1053023288",
        "pub.1093438635",
        "pub.1046511005",
        "pub.1018673936",
        "pub.1016289910",
        "pub.1096034033",
        "pub.1029426599",
        "pub.1061186159",
        "pub.1093647232",
        "pub.1094101114",
        "pub.1009836825",
        "pub.1094665301",
        "pub.1061153854",
        "pub.1061423626",
        "pub.1051122468",
        "pub.1049593305",
        "pub.1021801838",
        "pub.1035283269",
        "pub.1095662600",
        "pub.1042411758",
        "pub.1048320750"
      ],
      "concepts_scores": [
        {
          "concept": "code property graph",
          "relevance": 0.807
        },
        {
          "concept": "source code",
          "relevance": 0.77
        },
        {
          "concept": "property graphs",
          "relevance": 0.742
        },
        {
          "concept": "representation of source code",
          "relevance": 0.716
        },
        {
          "concept": "protection of computer systems",
          "relevance": 0.714
        },
        {
          "concept": "abstract syntax tree",
          "relevance": 0.692
        },
        {
          "concept": "program dependence graph",
          "relevance": 0.688
        },
        {
          "concept": "control flow graph",
          "relevance": 0.681
        },
        {
          "concept": "mining large amounts",
          "relevance": 0.673
        },
        {
          "concept": "error-prone process",
          "relevance": 0.661
        },
        {
          "concept": "insecure code",
          "relevance": 0.646
        },
        {
          "concept": "memory disclosure",
          "relevance": 0.646
        },
        {
          "concept": "string vulnerabilities",
          "relevance": 0.644
        },
        {
          "concept": "discover vulnerabilities",
          "relevance": 0.642
        },
        {
          "concept": "security breaches",
          "relevance": 0.642
        },
        {
          "concept": "integer overflow",
          "relevance": 0.642
        },
        {
          "concept": "syntax tree",
          "relevance": 0.641
        },
        {
          "concept": "buffer overflow",
          "relevance": 0.638
        },
        {
          "concept": "graph database",
          "relevance": 0.638
        },
        {
          "concept": "Linux kernel",
          "relevance": 0.636
        },
        {
          "concept": "graph traversal",
          "relevance": 0.635
        },
        {
          "concept": "attacker's cards",
          "relevance": 0.634
        },
        {
          "concept": "program analysis",
          "relevance": 0.632
        },
        {
          "concept": "dependency graph",
          "relevance": 0.629
        },
        {
          "concept": "data structures",
          "relevance": 0.628
        },
        {
          "concept": "computer systems",
          "relevance": 0.625
        },
        {
          "concept": "identification of vulnerabilities",
          "relevance": 0.617
        },
        {
          "concept": "flow graph",
          "relevance": 0.605
        },
        {
          "concept": "code",
          "relevance": 0.575
        },
        {
          "concept": "comprehensive representation",
          "relevance": 0.572
        },
        {
          "concept": "graph",
          "relevance": 0.568
        },
        {
          "concept": "model template",
          "relevance": 0.563
        },
        {
          "concept": "security",
          "relevance": 0.55
        },
        {
          "concept": "representation",
          "relevance": 0.512
        },
        {
          "concept": "Linux",
          "relevance": 0.495
        },
        {
          "concept": "large amounts",
          "relevance": 0.489
        },
        {
          "concept": "vulnerability",
          "relevance": 0.474
        },
        {
          "concept": "traversal",
          "relevance": 0.467
        },
        {
          "concept": "software",
          "relevance": 0.462
        },
        {
          "concept": "attacks",
          "relevance": 0.459
        },
        {
          "concept": "overflow",
          "relevance": 0.458
        },
        {
          "concept": "kernel",
          "relevance": 0.453
        },
        {
          "concept": "Discover",
          "relevance": 0.447
        },
        {
          "concept": "system",
          "relevance": 0.438
        },
        {
          "concept": "breach",
          "relevance": 0.43
        },
        {
          "concept": "card",
          "relevance": 0.427
        },
        {
          "concept": "integer",
          "relevance": 0.414
        },
        {
          "concept": "database",
          "relevance": 0.405
        },
        {
          "concept": "memory",
          "relevance": 0.401
        },
        {
          "concept": "string",
          "relevance": 0.384
        },
        {
          "concept": "trees",
          "relevance": 0.376
        },
        {
          "concept": "method",
          "relevance": 0.366
        },
        {
          "concept": "expertise",
          "relevance": 0.364
        },
        {
          "concept": "concept",
          "relevance": 0.363
        },
        {
          "concept": "program",
          "relevance": 0.357
        },
        {
          "concept": "model",
          "relevance": 0.345
        },
        {
          "concept": "source",
          "relevance": 0.343
        },
        {
          "concept": "template",
          "relevance": 0.343
        },
        {
          "concept": "audit",
          "relevance": 0.337
        },
        {
          "concept": "process",
          "relevance": 0.327
        },
        {
          "concept": "disclosure",
          "relevance": 0.312
        },
        {
          "concept": "identification",
          "relevance": 0.309
        },
        {
          "concept": "buffer",
          "relevance": 0.286
        },
        {
          "concept": "protection",
          "relevance": 0.279
        },
        {
          "concept": "structure",
          "relevance": 0.265
        },
        {
          "concept": "amount",
          "relevance": 0.263
        },
        {
          "concept": "analysis",
          "relevance": 0.262
        },
        {
          "concept": "control",
          "relevance": 0.261
        },
        {
          "concept": "efficacy",
          "relevance": 0.154
        }
      ]
    },
    {
      "paperId": "pub.1111520462",
      "doi": "10.1109/icmla.2018.00120",
      "title": "Automated Vulnerability Detection in Source Code Using Deep Representation Learning",
      "year": 2018,
      "citationCount": 521,
      "fieldCitationRatio": 159.56,
      "abstract": "Increasing numbers of software vulnerabilities are discovered every year whether they are reported publicly or discovered internally in proprietary code. These vulnerabilities can pose serious risk of exploit and result in system compromise, information leaks, or denial of service. We leveraged the wealth of C and C++ open-source code available to develop a large-scale function-level vulnerability detection system using machine learning. To supplement existing labeled vulnerability datasets, we compiled a vast dataset of millions of open-source functions and labeled it with carefully-selected findings from three different static analyzers that indicate potential exploits. Using these datasets, we developed a fast and scalable vulnerability detection tool based on deep feature representation learning that directly interprets lexed source code. We evaluated our tool on code from both real software packages and the NIST SATE IV benchmark dataset. Our results demonstrate that deep feature representation learning on source code is a promising approach for automated software vulnerability detection.",
      "reference_ids": [
        "pub.1016856313",
        "pub.1042062407",
        "pub.1046082672",
        "pub.1019867721",
        "pub.1095647202",
        "pub.1099110546",
        "pub.1091288730",
        "pub.1061789165",
        "pub.1093270996"
      ],
      "concepts_scores": [
        {
          "concept": "deep feature representation learning",
          "relevance": 0.812
        },
        {
          "concept": "feature representation learning",
          "relevance": 0.79
        },
        {
          "concept": "representation learning",
          "relevance": 0.767
        },
        {
          "concept": "vulnerability detection",
          "relevance": 0.732
        },
        {
          "concept": "source code",
          "relevance": 0.718
        },
        {
          "concept": "automated software vulnerability detection",
          "relevance": 0.701
        },
        {
          "concept": "automated vulnerability detection",
          "relevance": 0.683
        },
        {
          "concept": "vulnerability detection system",
          "relevance": 0.683
        },
        {
          "concept": "software vulnerability detection",
          "relevance": 0.683
        },
        {
          "concept": "vulnerability detection tools",
          "relevance": 0.682
        },
        {
          "concept": "denial of service",
          "relevance": 0.678
        },
        {
          "concept": "deep representation learning",
          "relevance": 0.675
        },
        {
          "concept": "software vulnerabilities",
          "relevance": 0.632
        },
        {
          "concept": "open-source code",
          "relevance": 0.632
        },
        {
          "concept": "benchmark datasets",
          "relevance": 0.628
        },
        {
          "concept": "static analyzer",
          "relevance": 0.627
        },
        {
          "concept": "information leaks",
          "relevance": 0.625
        },
        {
          "concept": "vulnerability datasets",
          "relevance": 0.624
        },
        {
          "concept": "open-source functions",
          "relevance": 0.617
        },
        {
          "concept": "machine learning",
          "relevance": 0.607
        },
        {
          "concept": "detection system",
          "relevance": 0.592
        },
        {
          "concept": "proprietary code",
          "relevance": 0.582
        },
        {
          "concept": "dataset",
          "relevance": 0.573
        },
        {
          "concept": "code",
          "relevance": 0.563
        },
        {
          "concept": "detection tools",
          "relevance": 0.56
        },
        {
          "concept": "learning",
          "relevance": 0.54
        },
        {
          "concept": "software package",
          "relevance": 0.529
        },
        {
          "concept": "software",
          "relevance": 0.524
        },
        {
          "concept": "system compromise",
          "relevance": 0.498
        },
        {
          "concept": "C++",
          "relevance": 0.48
        },
        {
          "concept": "Deep",
          "relevance": 0.471
        },
        {
          "concept": "detection",
          "relevance": 0.454
        },
        {
          "concept": "NIST",
          "relevance": 0.453
        },
        {
          "concept": "machine",
          "relevance": 0.446
        },
        {
          "concept": "vulnerability",
          "relevance": 0.431
        },
        {
          "concept": "system",
          "relevance": 0.429
        },
        {
          "concept": "denial",
          "relevance": 0.412
        },
        {
          "concept": "information",
          "relevance": 0.41
        },
        {
          "concept": "services",
          "relevance": 0.408
        },
        {
          "concept": "potential exploitation",
          "relevance": 0.404
        },
        {
          "concept": "increasing number",
          "relevance": 0.377
        },
        {
          "concept": "tools",
          "relevance": 0.371
        },
        {
          "concept": "exploitation",
          "relevance": 0.369
        },
        {
          "concept": "package",
          "relevance": 0.339
        },
        {
          "concept": "compromise",
          "relevance": 0.324
        },
        {
          "concept": "results",
          "relevance": 0.312
        },
        {
          "concept": "analyzer",
          "relevance": 0.301
        },
        {
          "concept": "function",
          "relevance": 0.297
        },
        {
          "concept": "source",
          "relevance": 0.29
        },
        {
          "concept": "leak",
          "relevance": 0.27
        },
        {
          "concept": "number",
          "relevance": 0.264
        },
        {
          "concept": "wealth",
          "relevance": 0.203
        },
        {
          "concept": "years",
          "relevance": 0.192
        },
        {
          "concept": "findings",
          "relevance": 0.181
        },
        {
          "concept": "risk",
          "relevance": 0.175
        }
      ]
    },
    {
      "paperId": "pub.1162804688",
      "doi": "10.1109/apr59189.2023.00012",
      "title": "An Analysis of the Automatic Bug Fixing Performance of ChatGPT",
      "year": 2023,
      "citationCount": 253,
      "fieldCitationRatio": 215.99,
      "abstract": "To support software developers in finding and fixing software bugs, several automated program repair techniques have been introduced. Given a test suite, standard methods usually either synthesize a repair, or navigate a search space of software edits to find test-suite passing variants. Recent program repair methods are based on deep learning approaches. One of these novel methods, which is not primarily intended for automated program repair, but is still suitable for it, is ChatGPT. The bug fixing performance of ChatGPT, however, is so far unclear. Therefore, in this paper we evaluate ChatGPT on the standard bug fixing benchmark set, QuixBugs, and compare the performance with the results of several other approaches reported in the literature. We find that ChatGPT's bug fixing performance is competitive to the common deep learning approaches CoCoNut and Codex and notably better than the results reported for the standard program repair approaches. In contrast to previous approaches, ChatGPT offers a dialogue system through which further information, e.g., the expected output for a certain input or an observed error message, can be entered. By providing such hints to ChatGPT, its success rate can be further increased, fixing 31 out of 40 bugs, outperforming state-of-the-art.",
      "reference_ids": [
        "pub.1149299491",
        "pub.1129334333",
        "pub.1042900129",
        "pub.1061788866",
        "pub.1096107583",
        "pub.1107481339",
        "pub.1149561754",
        "pub.1090297569",
        "pub.1133174433",
        "pub.1131074664",
        "pub.1092571776",
        "pub.1061789219",
        "pub.1104576593",
        "pub.1133175050",
        "pub.1111830691",
        "pub.1106294808",
        "pub.1085304252"
      ],
      "concepts_scores": [
        {
          "concept": "automated program repair techniques",
          "relevance": 0.719
        },
        {
          "concept": "fixing software bugs",
          "relevance": 0.7
        },
        {
          "concept": "program repair techniques",
          "relevance": 0.7
        },
        {
          "concept": "program repair approaches",
          "relevance": 0.7
        },
        {
          "concept": "automated program repair",
          "relevance": 0.699
        },
        {
          "concept": "deep learning approach",
          "relevance": 0.678
        },
        {
          "concept": "program repair",
          "relevance": 0.649
        },
        {
          "concept": "software bugs",
          "relevance": 0.645
        },
        {
          "concept": "software development",
          "relevance": 0.644
        },
        {
          "concept": "test suite",
          "relevance": 0.643
        },
        {
          "concept": "dialogue systems",
          "relevance": 0.64
        },
        {
          "concept": "error messages",
          "relevance": 0.638
        },
        {
          "concept": "ChatGPT",
          "relevance": 0.628
        },
        {
          "concept": "learning approach",
          "relevance": 0.613
        },
        {
          "concept": "benchmark set",
          "relevance": 0.602
        },
        {
          "concept": "novel method",
          "relevance": 0.578
        },
        {
          "concept": "bugs",
          "relevance": 0.576
        },
        {
          "concept": "repair approach",
          "relevance": 0.54
        },
        {
          "concept": "software",
          "relevance": 0.537
        },
        {
          "concept": "performance",
          "relevance": 0.483
        },
        {
          "concept": "automatically",
          "relevance": 0.476
        },
        {
          "concept": "messages",
          "relevance": 0.466
        },
        {
          "concept": "method",
          "relevance": 0.446
        },
        {
          "concept": "success rate",
          "relevance": 0.435
        },
        {
          "concept": "repair method",
          "relevance": 0.432
        },
        {
          "concept": "input",
          "relevance": 0.424
        },
        {
          "concept": "information",
          "relevance": 0.42
        },
        {
          "concept": "suite",
          "relevance": 0.401
        },
        {
          "concept": "output",
          "relevance": 0.398
        },
        {
          "concept": "system",
          "relevance": 0.38
        },
        {
          "concept": "sets",
          "relevance": 0.378
        },
        {
          "concept": "technique",
          "relevance": 0.373
        },
        {
          "concept": "results",
          "relevance": 0.37
        },
        {
          "concept": "standard methods",
          "relevance": 0.321
        },
        {
          "concept": "success",
          "relevance": 0.32
        },
        {
          "concept": "variants",
          "relevance": 0.308
        },
        {
          "concept": "dialogue",
          "relevance": 0.292
        },
        {
          "concept": "literature",
          "relevance": 0.29
        },
        {
          "concept": "development",
          "relevance": 0.285
        },
        {
          "concept": "repair techniques",
          "relevance": 0.265
        },
        {
          "concept": "analysis",
          "relevance": 0.263
        },
        {
          "concept": "test",
          "relevance": 0.26
        },
        {
          "concept": "rate",
          "relevance": 0.243
        },
        {
          "concept": "repair",
          "relevance": 0.201
        },
        {
          "concept": "findings",
          "relevance": 0.17
        },
        {
          "concept": "coconut",
          "relevance": 0.147
        },
        {
          "concept": "Codex",
          "relevance": 0.142
        },
        {
          "concept": "approach",
          "relevance": 0.138
        }
      ]
    },
    {
      "paperId": "pub.1061788866",
      "doi": "10.1109/tse.2011.104",
      "title": "GenProg: A Generic Method for Automatic Software Repair",
      "year": 2011,
      "citationCount": 825,
      "fieldCitationRatio": 215.89,
      "abstract": "This paper describes GenProg, an automated method for repairing defects in off-the-shelf, legacy programs without formal specifications, program annotations, or special coding practices. GenProg uses an extended form of genetic programming to evolve a program variant that retains required functionality but is not susceptible to a given defect, using existing test suites to encode both the defect and required functionality. Structural differencing algorithms and delta debugging reduce the difference between this variant and the original program to a minimal repair. We describe the algorithm and report experimental results of its success on 16 programs totaling 1.25 M lines of C code and 120K lines of module code, spanning eight classes of defects, in 357 seconds, on average. We analyze the generated repairs qualitatively and quantitatively to demonstrate that the process efficiently produces evolved programs that repair the defect, are not fragile input memorizations, and do not lead to serious degradation in functionality.",
      "reference_ids": [
        "pub.1061203465",
        "pub.1001654242",
        "pub.1061788606",
        "pub.1021443858",
        "pub.1024809761",
        "pub.1019650368",
        "pub.1017171481",
        "pub.1024002070",
        "pub.1029368235",
        "pub.1061154784",
        "pub.1094946350",
        "pub.1044825122",
        "pub.1093628329",
        "pub.1018897494",
        "pub.1023820659",
        "pub.1062654767",
        "pub.1007544157",
        "pub.1047869588",
        "pub.1000472310",
        "pub.1046166910",
        "pub.1063172081",
        "pub.1030486867",
        "pub.1041778998",
        "pub.1014023744",
        "pub.1093262808",
        "pub.1022562617",
        "pub.1032303957",
        "pub.1061105668",
        "pub.1038574231",
        "pub.1008984458",
        "pub.1043483030",
        "pub.1002902268",
        "pub.1061422353",
        "pub.1061788065",
        "pub.1095758678",
        "pub.1045622683",
        "pub.1053210075",
        "pub.1021640248",
        "pub.1061154788",
        "pub.1023255966",
        "pub.1037222507",
        "pub.1043679011",
        "pub.1008495029",
        "pub.1024338725",
        "pub.1093840238",
        "pub.1098889532",
        "pub.1012728890",
        "pub.1093729389",
        "pub.1093995929",
        "pub.1018941748",
        "pub.1007487762",
        "pub.1019152293",
        "pub.1046090211",
        "pub.1098962535",
        "pub.1010877517",
        "pub.1025674564",
        "pub.1032933956",
        "pub.1000416850",
        "pub.1095229151",
        "pub.1018177692",
        "pub.1027089425",
        "pub.1095312420",
        "pub.1020038070"
      ],
      "concepts_scores": [
        {
          "concept": "automatic software repair",
          "relevance": 0.699
        },
        {
          "concept": "program annotations",
          "relevance": 0.645
        },
        {
          "concept": "software repair",
          "relevance": 0.643
        },
        {
          "concept": "test suite",
          "relevance": 0.642
        },
        {
          "concept": "delta debugging",
          "relevance": 0.64
        },
        {
          "concept": "classes of defects",
          "relevance": 0.635
        },
        {
          "concept": "program variants",
          "relevance": 0.633
        },
        {
          "concept": "differencing algorithm",
          "relevance": 0.63
        },
        {
          "concept": "modulation code",
          "relevance": 0.63
        },
        {
          "concept": "original program",
          "relevance": 0.612
        },
        {
          "concept": "reports experimental results",
          "relevance": 0.61
        },
        {
          "concept": "genetic programming",
          "relevance": 0.6
        },
        {
          "concept": "GenProg",
          "relevance": 0.59
        },
        {
          "concept": "legacy programs",
          "relevance": 0.59
        },
        {
          "concept": "generic method",
          "relevance": 0.57
        },
        {
          "concept": "experimental results",
          "relevance": 0.57
        },
        {
          "concept": "algorithm",
          "relevance": 0.551
        },
        {
          "concept": "automated method",
          "relevance": 0.528
        },
        {
          "concept": "debugging",
          "relevance": 0.495
        },
        {
          "concept": "automatically",
          "relevance": 0.476
        },
        {
          "concept": "annotation",
          "relevance": 0.463
        },
        {
          "concept": "code",
          "relevance": 0.461
        },
        {
          "concept": "program",
          "relevance": 0.447
        },
        {
          "concept": "method",
          "relevance": 0.424
        },
        {
          "concept": "memorization",
          "relevance": 0.419
        },
        {
          "concept": "suite",
          "relevance": 0.4
        },
        {
          "concept": "modulation",
          "relevance": 0.391
        },
        {
          "concept": "legacy",
          "relevance": 0.379
        },
        {
          "concept": "function",
          "relevance": 0.369
        },
        {
          "concept": "variants",
          "relevance": 0.356
        },
        {
          "concept": "class",
          "relevance": 0.353
        },
        {
          "concept": "process",
          "relevance": 0.328
        },
        {
          "concept": "specificity",
          "relevance": 0.322
        },
        {
          "concept": "results",
          "relevance": 0.319
        },
        {
          "concept": "success",
          "relevance": 0.319
        },
        {
          "concept": "minimal repair",
          "relevance": 0.296
        },
        {
          "concept": "average",
          "relevance": 0.282
        },
        {
          "concept": "defects",
          "relevance": 0.28
        },
        {
          "concept": "test",
          "relevance": 0.26
        },
        {
          "concept": "degradation",
          "relevance": 0.245
        },
        {
          "concept": "repair",
          "relevance": 0.205
        },
        {
          "concept": "repair defects",
          "relevance": 0.188
        },
        {
          "concept": "paper",
          "relevance": 0.17
        },
        {
          "concept": "delta",
          "relevance": 0.168
        }
      ]
    },
    {
      "paperId": "pub.1061789219",
      "doi": "10.1109/tse.2016.2560811",
      "title": "Nopol: Automatic Repair of Conditional Statement Bugs in Java Programs",
      "year": 2017,
      "citationCount": 345,
      "fieldCitationRatio": 87.68,
      "abstract": "We propose Nopol, an approach to automatic repair of buggy conditional statements (i.e., if-then-else statements). This approach takes a buggy program as well as a test suite as input and generates a patch with a conditional expression as output. The test suite is required to contain passing test cases to model the expected behavior of the program and at least one failing test case that reveals the bug to be repaired. The process of Nopol consists of three major phases. First, Nopol employs angelic fix localization to identify expected values of a condition during the test execution. Second, runtime trace collection is used to collect variables and their actual values, including primitive data types and objected-oriented features (e.g., nullness checks), to serve as building blocks for patch generation. Third, Nopol encodes these collected data into an instance of a Satisfiability Modulo Theory (SMT) problem; then a feasible solution to the SMT instance is translated back into a code patch. We evaluate Nopol on 22 real-world bugs (16 bugs with buggy if conditions and six bugs with missing preconditions) on two large open-source projects, namely Apache Commons Math and Apache Commons Lang. Empirical analysis on these bugs shows that our approach can effectively fix bugs with buggy if conditions and missing preconditions. We illustrate the capabilities and limitations of Nopol using case studies of real bug fixes.",
      "reference_ids": [
        "pub.1014044869",
        "pub.1052858849",
        "pub.1000472310",
        "pub.1045205272",
        "pub.1035258599",
        "pub.1018016377",
        "pub.1016047793",
        "pub.1039636802",
        "pub.1094844395",
        "pub.1061789165",
        "pub.1012226245",
        "pub.1093303890",
        "pub.1008714607",
        "pub.1021873759",
        "pub.1021618688",
        "pub.1041934767",
        "pub.1093262808",
        "pub.1021915842",
        "pub.1093484682",
        "pub.1039229484",
        "pub.1003063719",
        "pub.1061789072",
        "pub.1095164389",
        "pub.1098906436",
        "pub.1052462558",
        "pub.1021986983",
        "pub.1093588080",
        "pub.1043689296",
        "pub.1094077558",
        "pub.1093410000",
        "pub.1045768294",
        "pub.1045187751",
        "pub.1040480656",
        "pub.1034005359",
        "pub.1012287204",
        "pub.1024109152",
        "pub.1049084634",
        "pub.1061787160",
        "pub.1094394818",
        "pub.1093295404",
        "pub.1036764504",
        "pub.1014735922",
        "pub.1039816810",
        "pub.1021601485",
        "pub.1093460699",
        "pub.1093319771",
        "pub.1013628462",
        "pub.1061788866",
        "pub.1095462008",
        "pub.1000142676"
      ],
      "concepts_scores": [
        {
          "concept": "Satisfiability Modulo Theories",
          "relevance": 0.846
        },
        {
          "concept": "test suite",
          "relevance": 0.742
        },
        {
          "concept": "automatic repair",
          "relevance": 0.722
        },
        {
          "concept": "satisfiability modulo theory instances",
          "relevance": 0.716
        },
        {
          "concept": "real-world bugs",
          "relevance": 0.696
        },
        {
          "concept": "primitive data types",
          "relevance": 0.688
        },
        {
          "concept": "open-source projects",
          "relevance": 0.687
        },
        {
          "concept": "buggy programs",
          "relevance": 0.644
        },
        {
          "concept": "Modulo Theories",
          "relevance": 0.644
        },
        {
          "concept": "bug fixes",
          "relevance": 0.643
        },
        {
          "concept": "code patches",
          "relevance": 0.642
        },
        {
          "concept": "Java programs",
          "relevance": 0.638
        },
        {
          "concept": "patch generation",
          "relevance": 0.638
        },
        {
          "concept": "test execution",
          "relevance": 0.629
        },
        {
          "concept": "trace collection",
          "relevance": 0.628
        },
        {
          "concept": "data types",
          "relevance": 0.608
        },
        {
          "concept": "conditional statements",
          "relevance": 0.607
        },
        {
          "concept": "bugs",
          "relevance": 0.589
        },
        {
          "concept": "test cases",
          "relevance": 0.574
        },
        {
          "concept": "buggy",
          "relevance": 0.573
        },
        {
          "concept": "satisfiability",
          "relevance": 0.503
        },
        {
          "concept": "runtime",
          "relevance": 0.494
        },
        {
          "concept": "case study",
          "relevance": 0.48
        },
        {
          "concept": "nopol",
          "relevance": 0.479
        },
        {
          "concept": "instances",
          "relevance": 0.475
        },
        {
          "concept": "Java",
          "relevance": 0.468
        },
        {
          "concept": "execution",
          "relevance": 0.464
        },
        {
          "concept": "suite",
          "relevance": 0.462
        },
        {
          "concept": "code",
          "relevance": 0.46
        },
        {
          "concept": "APACHE",
          "relevance": 0.452
        },
        {
          "concept": "building blocks",
          "relevance": 0.444
        },
        {
          "concept": "program",
          "relevance": 0.434
        },
        {
          "concept": "input",
          "relevance": 0.422
        },
        {
          "concept": "actual values",
          "relevance": 0.421
        },
        {
          "concept": "capability",
          "relevance": 0.419
        },
        {
          "concept": "patches",
          "relevance": 0.418
        },
        {
          "concept": "collective variables",
          "relevance": 0.401
        },
        {
          "concept": "features",
          "relevance": 0.4
        },
        {
          "concept": "empirical analysis",
          "relevance": 0.4
        },
        {
          "concept": "output",
          "relevance": 0.396
        },
        {
          "concept": "fixing",
          "relevance": 0.381
        },
        {
          "concept": "block",
          "relevance": 0.38
        },
        {
          "concept": "conditional expression",
          "relevance": 0.37
        },
        {
          "concept": "building",
          "relevance": 0.37
        },
        {
          "concept": "collection",
          "relevance": 0.369
        },
        {
          "concept": "project",
          "relevance": 0.358
        },
        {
          "concept": "solution",
          "relevance": 0.356
        },
        {
          "concept": "localization",
          "relevance": 0.348
        },
        {
          "concept": "data",
          "relevance": 0.33
        },
        {
          "concept": "process",
          "relevance": 0.328
        },
        {
          "concept": "generation",
          "relevance": 0.324
        },
        {
          "concept": "test",
          "relevance": 0.321
        },
        {
          "concept": "cases",
          "relevance": 0.32
        },
        {
          "concept": "Angeles",
          "relevance": 0.312
        },
        {
          "concept": "preconditioning",
          "relevance": 0.299
        },
        {
          "concept": "limitations",
          "relevance": 0.298
        },
        {
          "concept": "statements",
          "relevance": 0.292
        },
        {
          "concept": "values",
          "relevance": 0.278
        },
        {
          "concept": "theory",
          "relevance": 0.277
        },
        {
          "concept": "behavior",
          "relevance": 0.27
        },
        {
          "concept": "analysis",
          "relevance": 0.262
        },
        {
          "concept": "conditions",
          "relevance": 0.243
        },
        {
          "concept": "problem",
          "relevance": 0.241
        },
        {
          "concept": "variables",
          "relevance": 0.235
        },
        {
          "concept": "phase",
          "relevance": 0.218
        },
        {
          "concept": "type",
          "relevance": 0.217
        },
        {
          "concept": "study",
          "relevance": 0.202
        },
        {
          "concept": "Lang",
          "relevance": 0.198
        },
        {
          "concept": "expression",
          "relevance": 0.163
        }
      ]
    }
  ],
  "evolution_links": [
    {
      "source": "pub.1169306136",
      "target": "pub.1170136967",
      "source_title": "A Survey on Large Language Model (LLM) Security and Privacy: The Good, The Bad, and The Ugly",
      "target_title": "AnomalyGPT: Detecting Industrial Anomalies Using Large Vision-Language Models"
    },
    {
      "source": "pub.1170136967",
      "target": "pub.1150866672",
      "source_title": "AnomalyGPT: Detecting Industrial Anomalies Using Large Vision-Language Models",
      "target_title": "Learning Semantic Context from Normal Samples for Unsupervised Anomaly Detection"
    },
    {
      "source": "pub.1150866672",
      "target": "pub.1023309467",
      "source_title": "Learning Semantic Context from Normal Samples for Unsupervised Anomaly Detection",
      "target_title": "Support Vector Data Description"
    },
    {
      "source": "pub.1170136967",
      "target": "pub.1163452333",
      "source_title": "AnomalyGPT: Detecting Industrial Anomalies Using Large Vision-Language Models",
      "target_title": "OmniAL: A Unified CNN Framework for Unsupervised Anomaly Localization"
    },
    {
      "source": "pub.1163452333",
      "target": "pub.1142372405",
      "source_title": "OmniAL: A Unified CNN Framework for Unsupervised Anomaly Localization",
      "target_title": "Exploring Simple Siamese Representation Learning"
    },
    {
      "source": "pub.1163452333",
      "target": "pub.1135998226",
      "source_title": "OmniAL: A Unified CNN Framework for Unsupervised Anomaly Localization",
      "target_title": "PaDiM: A Patch Distribution Modeling Framework for Anomaly Detection and Localization"
    },
    {
      "source": "pub.1169306136",
      "target": "pub.1170402340",
      "source_title": "A Survey on Large Language Model (LLM) Security and Privacy: The Good, The Bad, and The Ugly",
      "target_title": "ChatGPT for Vulnerability Detection, Classification, and Repair: How Far Are We?"
    },
    {
      "source": "pub.1170402340",
      "target": "pub.1130964448",
      "source_title": "ChatGPT for Vulnerability Detection, Classification, and Repair: How Far Are We?",
      "target_title": "A C/C++ Code Vulnerability Dataset with Code Changes and CVE Summaries"
    },
    {
      "source": "pub.1130964448",
      "target": "pub.1095456003",
      "source_title": "A C/C++ Code Vulnerability Dataset with Code Changes and CVE Summaries",
      "target_title": "Modeling and Discovering Vulnerabilities with Code Property Graphs"
    },
    {
      "source": "pub.1130964448",
      "target": "pub.1111520462",
      "source_title": "A C/C++ Code Vulnerability Dataset with Code Changes and CVE Summaries",
      "target_title": "Automated Vulnerability Detection in Source Code Using Deep Representation Learning"
    },
    {
      "source": "pub.1170402340",
      "target": "pub.1162804688",
      "source_title": "ChatGPT for Vulnerability Detection, Classification, and Repair: How Far Are We?",
      "target_title": "An Analysis of the Automatic Bug Fixing Performance of ChatGPT"
    },
    {
      "source": "pub.1162804688",
      "target": "pub.1061788866",
      "source_title": "An Analysis of the Automatic Bug Fixing Performance of ChatGPT",
      "target_title": "GenProg: A Generic Method for Automatic Software Repair"
    },
    {
      "source": "pub.1162804688",
      "target": "pub.1061789219",
      "source_title": "An Analysis of the Automatic Bug Fixing Performance of ChatGPT",
      "target_title": "Nopol: Automatic Repair of Conditional Statement Bugs in Java Programs"
    }
  ]
}